{"version":3,"file":"bundle.esm.js","sources":["../src/utils/index.ts","../src/core/validate.ts","../src/core/index.ts"],"sourcesContent":["const typeEnum = {\n    \"string\":\"[object String]\",\n    \"number\":\"[object Number]\",\n    \"boolean\":\"[object Boolean]\",\n    \"undefined\":\"object Undefined]\",\n    \"null\":\"object Null]\",\n    \"object\":\"[object Object]\",\n    \"function\":\"[object Function]\",\n    \"array\":\"[object Array]\",\n    \"date\":\"[object Date]\",\n    \"reg\":\"[object RegExp]\"\n};\n\n\n/**\n * Verify that a value is an object\n * @param {any} obj \n * @returns {boolean}\n * @author  chrislee\n * @Time 2020/7/12\n */\nexport const isObject:(obj:unknown)=>boolean = (obj) =>{\n    let res = true;\n    if(Object.prototype.toString.call(obj) === '[object Object]'){\n        res = true;\n    }else{\n        res = false;\n    }\n    return res;\n};\n\n/**\n * Verify that a value is undefined\n * @param {any} obj\n * @returns {boolean}\n * @author chrislee\n * @Time 2020/7/12\n */\nexport const isUndefined:(obj:unknown)=>boolean = (obj) => {\n    let res: boolean;\n    if(obj === undefined||Object.prototype.toString.call(obj)===typeEnum[\"undefined\"]){\n        res = true;\n    }else{\n        res = false;\n    }\n    return res;\n};\n\n/**\n * Verify that a value is an array\n * @param {any} obj\n * @returns {boolean}\n * @author chrislee\n * @Time 2020/7/12\n */\nexport const isArray:(obj:unknown)=>boolean = (obj) =>{\n    let res:boolean;\n    if(obj instanceof Array || Object.prototype.toString.call(obj)===typeEnum[\"array\"]){\n        res = true;\n    }else{\n        res = false;\n    }\n    return res;\n};\n\n/**\n * Verify that a value is an boolean\n * @param {any} obj\n * @returns {boolean}\n * @author chrislee\n * @Time 2020/7/12\n */\nexport const isBoolean:(obj:unknown) => boolean = (obj) => {\n    let res:boolean;\n    if( Object.prototype.toString.call(obj)===typeEnum[\"boolean\"]){\n        res = true;\n    }else{\n        res = false;\n    }\n    return res;\n};\n\nexport const typeValidate:(obj:unknown,type:keyof typeof typeEnum,constant?:string)=>boolean = (obj,type,constant=`The value of target`) =>{\n    let res:boolean;\n    if(Object.prototype.toString.call(obj)=== typeEnum[type]){\n        res = true;\n    }else{\n        let currentType = `undefined`;\n        for(const key in typeEnum){\n            if(typeEnum[key] === Object.prototype.toString.call(obj)){\n                currentType = key;\n            }\n        }\n        throw TypeError(`${constant} expect a ${type},but got ${currentType}`);\n    }\n    return res;\n};","import {isArray} from \"../utils\";\nexport interface Options {\n    type: \"esm\" | \"cjs\",\n    target:string[]\n}\n\nexport const optionValidate = (opt:Options): Options => {\n    const optionsKeys:string[] = Object.keys(opt);\n    const opts:Options = Object.create({});\n    if(optionsKeys.includes(\"type\")){\n        if([\"esm\",\"cjs\"].includes(opt[\"type\"])===false){\n            throw Error(`the prop 'type' of option in @babel/module-remover only revicive param 'cjs' or 'esm'`);\n        }\n        opts[\"type\"] = opt[\"type\"];\n    }else{\n        opts[\"type\"] = \"esm\";\n    }\n    if(optionsKeys.includes(\"target\")){\n        if(isArray(opt[\"target\"])){\n            opts[\"target\"] = opt[\"target\"];\n        }else{\n            throw Error(`the prop 'target' of option in @babel/module-remover expect a Array, but got another type `);\n        }\n    }else{\n        throw Error(`the prop 'target' of option in @babel/module-remover expect a Array, but got undefined `);\n    }\n    return opts;\n};","import { Visitor } from \"@babel/core\";\nimport { Identifier } from \"@babel/types\";\nimport {optionValidate, Options} from \"./validate\";\n\nexport default function({type:t}){\n    const visitor:Visitor<{opt:Options}> = {\n        ImportDeclaration(path,state){\n            const {target:targetModules} = optionValidate(state.opt);\n            const {source} = path.node;\n            if(targetModules.includes(source.value)){\n                path.remove();\n            }\n        },\n        VariableDeclaration(path,state){\n            const {declarations} = path.node;\n            const {target:targetModules} = optionValidate(state.opt);\n            Array.from(declarations).forEach(declarator => {\n                const {init} = declarator;\n                if(init?.type === \"CallExpression\"){\n                    const callee = init.callee as Identifier;\n                    if(callee.name&&callee.name === \"require\"){\n                        const {arguments:args} = init;\n                        const isTarget:boolean = args.some((v) => {\n                            if(v.type === \"StringLiteral\"&&targetModules.includes(v.value)===true){\n                                return true;\n                            }else{\n                                return false;\n                            }\n                        });\n                        if(isTarget){\n                            path.remove();\n                        }\n                    }\n                }\n            });\n        },\n        ExpressionStatement(path,state){\n            const {expression} = path.node;\n            const {target:targetModules} = optionValidate(state.opt);\n            if(expression.type === \"CallExpression\"){\n                const callee = expression.callee as Identifier;\n                if(callee.name&&callee.name === \"require\") {\n                    const {arguments:args} = expression;\n                        const isTarget:boolean = args.some((v) => {\n                            if(v.type === \"StringLiteral\"&&targetModules.includes(v.value)===true){\n                                return true;\n                            }else{\n                                return false;\n                            }\n                        });\n                        if(isTarget){\n                            path.remove();\n                        }\n                }\n            }\n        }\n    };\n    return {\n        visitor\n    };\n}"],"names":[],"mappings":"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"}